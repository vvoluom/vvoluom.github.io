I"ñ8<h2 id="inspiration">Inspiration</h2>

<p>Prediction markets are common nowadays even in the world of crypto-currencies but even in this world of decentralized applications there is some sort of authority that users have to rely on to validate the correct outcome of a Question. What Chainlink and honeycomb solve is that exact problem. There is no longer a need to trust one singular source of data with the truth, just by using Chainlink‚Äôs decentralized network of oracles and Honeycomb‚Äôs extensive service line of API‚Äôs. I‚Äôve created a prototype to showcase the possibilities of what this technology is capable of and it‚Äôs main focus is on solving humanities longest prediction problem which has affected our day to day plans throughout the ages, The Weather!</p>

<h2 id="how-it-works">How it works</h2>

<p><img src="../images/weatherwizard/coverphoto.png" alt="linearly separable data" /></p>

<p>This is a prediction market where users can post a question about the future weather conditions of a city such as temperature, sunlight, snowfall etc. Once this question is posted other users can bet on the outcome of the prediction with regards to whether or not it will come true. For Example : ‚ÄúWill the average Degrees Celsius temperature in Malta on 12/12/19 be 14 Degrees Celsius or not?‚Äù, once this question is posed users can now vote Yes/No on it by betting Ethereum thereby putting money where their mouths are. When the date passes 12/12/2019 the voting is stopped and then the answer can be calculated. The answer is calculated by retrieving data from the World Weather Online API through the use of Chainlinks decentralized oracle network and averaging all the retrieved results out. For example : 3 API‚Äôs are pinged and the results are [13,14,15] -&gt; the average of these will be 14 therefore the question is true. All the users who voted correctly can now withdraw their Ethereum plus winnings and the losers are left with nothing. This makes it an incentive for people to accurately predict the weather and improve the technology that does so, by creating a market to value such information.</p>

<h2 id="contract">Contract</h2>

<p>The Weather Wizard is built using the Factory Design Pattern where the Weather Wizard Factory produces Weather Markets containing a future question about the weather. The function below is invoked inside a Factory contract to produces a new market. The market produced needs the parameters below to make a prediction on the weather.</p>

<p>Details needed to determine the outcome of a Weather Market:</p>
<ul>
  <li>_forecast : Question being asked with regards to weather E.G  ‚ÄúWill the average Degrees Celsius temperature in Malta on 12/12/19 be 14 Degrees Celsius or not?‚Äù</li>
  <li>_date : The Specific Date when the prediction is being asked for E.G ‚Äú12/12/19‚Äù</li>
  <li>_location : The Location where the weather is measured E.G ‚ÄúMalta‚Äù</li>
  <li>_timePeriod : The period over which the weather is measured for E.G ‚ÄúA Day‚Äù</li>
  <li>_infoType : The Measurement used to quantify weather depending on question E.G fahrenheit,celcius avg,max,min,uvindex,sunHour</li>
  <li>_jobId : The Specified Job that will be run on the Oracle</li>
  <li>_oracle : The Specific Oracle that will verify the data being requested.</li>
  <li>_timeDays : Deadline till betting stops on the market and verification begins.</li>
  <li>_apis : A list of different data sources that will verify the information.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="c1">//Function used to create a new market and deploy the contract</span>
    <span class="n">function</span> <span class="nf">createMarket</span><span class="o">(</span>
        
        <span class="n">string</span> <span class="n">_forecast</span><span class="o">,</span>
        <span class="n">string</span> <span class="n">_date</span><span class="o">,</span>
        <span class="n">string</span> <span class="n">_location</span><span class="o">,</span>
        <span class="n">uint8</span> <span class="n">_timePeriod</span><span class="o">,</span>
        <span class="n">string</span> <span class="n">_infoType</span><span class="o">,</span> <span class="c1">//fahrenheit or celcius avg,max,min,uvindex,sunHour, </span>
        <span class="n">string</span> <span class="n">_jobId</span><span class="o">,</span>
        <span class="n">address</span> <span class="n">_oracle</span><span class="o">,</span>
        <span class="n">string</span> <span class="n">_timeDays</span><span class="o">,</span>
        <span class="n">string</span><span class="o">[]</span> <span class="n">_apis</span>

    <span class="o">)</span><span class="kd">public</span> <span class="nf">returns</span><span class="o">(</span><span class="n">uint256</span><span class="o">){</span>

        <span class="c1">//Creates new market object here</span>
        <span class="nc">WeatherMarket</span> <span class="n">newMarket</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">WeatherMarket</span><span class="o">(</span>
            <span class="n">_forecast</span><span class="o">,</span>
            <span class="n">msg</span><span class="o">.</span><span class="na">sender</span><span class="o">,</span>
            <span class="n">_date</span><span class="o">,</span>
            <span class="n">_location</span><span class="o">,</span>
            <span class="n">_timePeriod</span><span class="o">,</span>
            <span class="n">_infoType</span><span class="o">,</span> <span class="c1">//fahrenheit or celcius avg,max,min,uvindex,sunHour, </span>
            <span class="n">_jobId</span><span class="o">,</span>
            <span class="n">_oracle</span><span class="o">,</span>
            <span class="n">_timeDays</span><span class="o">,</span> 
            <span class="n">_apis</span>
        <span class="o">);</span>
        <span class="n">weathermarkets</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="n">newMarket</span><span class="o">);</span>
        <span class="n">submissions</span><span class="o">[</span><span class="n">newMarket</span><span class="o">]</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
		<span class="n">uint256</span> <span class="n">currentIndex</span> <span class="o">=</span> <span class="n">weathermarkets</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
        
        <span class="n">emit</span> <span class="nf">newSubmission</span><span class="o">(</span><span class="n">address</span><span class="o">(</span><span class="n">newMarket</span><span class="o">));</span>
        <span class="k">return</span> <span class="n">currentIndex</span><span class="o">;</span>
    <span class="o">}</span>
</code></pre></div></div>
<p>Once created the address of the newely deployed contract is stored in an array containing all the markets and an event with the details of the market is emitted.
The code below shows the constructor of the newely created market. The data specified in the Factory contract is stored in two Structures a Market Information Sturct and a RequestInformation Struct.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="n">constructor</span><span class="o">(</span>

        <span class="n">string</span> <span class="n">_forecast</span><span class="o">,</span>
        <span class="n">string</span> <span class="n">_date</span><span class="o">,</span>
        <span class="n">uint</span> <span class="n">_afterDays</span><span class="o">,</span>
        <span class="n">string</span> <span class="n">_location</span><span class="o">,</span>
        <span class="n">uint8</span> <span class="n">_timePeriod</span><span class="o">,</span>
        <span class="n">string</span> <span class="n">_infoType</span><span class="o">,</span> <span class="c1">//fahrenheit or celcius avg,max,min,uvindex,sunHour, </span>
        <span class="n">string</span> <span class="n">_jobId</span><span class="o">,</span>
        <span class="n">address</span> <span class="n">_oracle</span><span class="o">,</span>
        <span class="n">string</span> <span class="n">_timeDays</span><span class="o">,</span>
        <span class="n">string</span><span class="o">[]</span> <span class="n">_apis</span>

    <span class="o">)</span><span class="kd">public</span><span class="o">{</span>

        <span class="n">mI</span><span class="o">.</span><span class="na">deploymentTime</span> <span class="o">=</span> <span class="n">block</span><span class="o">.</span><span class="na">timestamp</span><span class="o">;</span>
        <span class="n">mI</span><span class="o">.</span><span class="na">afterDays</span> <span class="o">=</span> <span class="n">_afterDays</span><span class="o">;</span>
        <span class="n">mI</span><span class="o">.</span><span class="na">Owner</span> <span class="o">=</span> <span class="n">msg</span><span class="o">.</span><span class="na">sender</span><span class="o">;</span>
        <span class="n">mI</span><span class="o">.</span><span class="na">remainder</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="n">mI</span><span class="o">.</span><span class="na">yesBetTotal</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="n">mI</span><span class="o">.</span><span class="na">noBetTotal</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="n">rI</span><span class="o">.</span><span class="na">forecast</span> <span class="o">=</span> <span class="n">_forecast</span><span class="o">;</span>
        <span class="n">rI</span><span class="o">.</span><span class="na">location</span> <span class="o">=</span> <span class="n">_location</span><span class="o">;</span>
        <span class="n">rI</span><span class="o">.</span><span class="na">date</span> <span class="o">=</span> <span class="n">_date</span><span class="o">;</span>
        <span class="n">rI</span><span class="o">.</span><span class="na">infoType</span> <span class="o">=</span> <span class="n">_infoType</span><span class="o">;</span>
        <span class="n">rI</span><span class="o">.</span><span class="na">jobId</span> <span class="o">=</span> <span class="n">_jobId</span><span class="o">;</span>
        <span class="n">rI</span><span class="o">.</span><span class="na">oracle</span> <span class="o">=</span> <span class="n">_oracle</span><span class="o">;</span>
        <span class="n">rI</span><span class="o">.</span><span class="na">timeDays</span> <span class="o">=</span><span class="n">_timeDays</span><span class="o">;</span>
        <span class="n">rI</span><span class="o">.</span><span class="na">released</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
        <span class="n">rI</span><span class="o">.</span><span class="na">apis</span> <span class="o">=</span> <span class="n">_apis</span><span class="o">;</span>
        <span class="n">bettingIsOpen</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
        <span class="n">setPublicChainlinkToken</span><span class="o">();</span>

    <span class="o">}</span>
</code></pre></div></div>

<p>The Market Information Struct seen in the code below specifies the information pretaining to the betting market.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="n">struct</span> <span class="nc">MarketInformation</span><span class="o">{</span>
        <span class="n">address</span> <span class="nc">Owner</span><span class="o">;</span>
        <span class="n">bool</span> <span class="n">actualOutcome</span><span class="o">;</span>
        <span class="n">uint</span> <span class="n">afterDays</span><span class="o">;</span>
        <span class="n">uint256</span> <span class="n">remainder</span><span class="o">;</span>
        <span class="n">uint256</span> <span class="n">deploymentTime</span><span class="o">;</span>
        <span class="n">uint256</span> <span class="n">yesBetTotal</span><span class="o">;</span>
        <span class="n">uint256</span> <span class="n">noBetTotal</span><span class="o">;</span>
        <span class="n">uint256</span> <span class="n">average</span><span class="o">;</span>
        <span class="n">address</span><span class="o">[]</span> <span class="n">betters</span><span class="o">;</span>
    <span class="o">}</span>
</code></pre></div></div>

<h2 id="aliquam-suscipit">Aliquam suscipit.</h2>

<p>Cras eget nisl accumsan, porta nisl in, egestas sapien. Vestibulum gravida nulla sed facilisis tempor. Suspendisse maximus nisi sit amet velit sodales fringilla. Vivamus luctus risus eget dui consectetur porttitor. Maecenas ut ultrices orci. Maecenas mollis est eu sodales mollis. Nulla facilisi. Suspendisse eros arcu, elementum sed sem eu, pharetra rhoncus odio. Proin nec tincidunt velit. Cras nisl augue, faucibus sed mauris in, vestibulum mollis nisl. Nam id libero ultrices, consequat ex vitae, convallis nulla.</p>

<p>Suspendisse lorem odio, blandit at nisl quis, hendrerit tempus tellus. Donec eget leo quis nisi vulputate consectetur. Praesent dignissim enim elit, congue luctus nisl cursus at. Sed rutrum molestie risus. Donec vulputate gravida accumsan. Vivamus tempus ullamcorper eleifend. Sed sagittis mi ut dolor tincidunt, ac rutrum nisi commodo.</p>

<p>Fusce non elit in diam rutrum vestibulum. Donec vitae elementum erat. Praesent elementum eget justo at bibendum. Fusce interdum diam lorem, ut placerat elit pretium quis. Quisque eu urna at quam commodo sagittis. Etiam posuere convallis tincidunt. Phasellus vitae ligula neque. Vivamus a purus at dolor iaculis placerat. Curabitur convallis eu lacus congue sagittis.</p>

<p>Aliquam suscipit fermentum mauris a accumsan. In facilisis, mauris quis pulvinar tempus, turpis sapien sodales nibh, nec feugiat augue est quis nisi. Fusce eget odio feugiat, luctus quam et, dapibus nulla. Sed ornare lacus non libero lacinia pretium. In eu dui vitae purus euismod feugiat ac ac est. Morbi vitae pretium lorem, non eleifend felis. Nullam at massa feugiat, rutrum elit at, semper lacus. Etiam vel rutrum felis. Nullam quis auctor lorem,et tempor arcu.</p>
:ET